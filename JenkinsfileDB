pipeline {
    agent any
    environment {
        DOCKER_COMPOSE_FILE = 'docker-compose.yml'
    }
    stages {
        stage('Checkout') {
            steps {
                git url: 'https://github.com/Soufyan-Lekhouaja/ecom_app', branch: 'master'
            }
        }
        stage('Start PostgreSQL (Production)') {
            steps {
                bat "docker-compose -f ${env.DOCKER_COMPOSE_FILE} up -d postgre-prod"
            }
        }
        stage('Wait for PostgreSQL Healthy') {
            steps {
                bat '''
                @echo off
                set MAX_RETRIES=60
                set COUNTER=0
                echo Waiting for postgre-prod to become healthy...

                :loop
                set /a COUNTER+=1
                echo Attempt %COUNTER%

                for /f "tokens=*" %%i in ('docker inspect --format "{{.State.Health.Status}}" postgre-prod 2^>nul') do set STATE=%%i
                if "%STATE%"=="healthy" (
                    echo postgre-prod is healthy.
                    goto done
                )

                if %COUNTER% geq %MAX_RETRIES% (
                    echo postgre-prod is not healthy after %MAX_RETRIES% tries.
                    exit 1
                )

                timeout /t 10 >nul
                goto loop
                :done
                '''
            }
        }
    }
    post {
        failure {
            echo 'Production PostgreSQL provisioning failed.'
        }
    }
}
