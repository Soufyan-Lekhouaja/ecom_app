pipeline {
    agent any
    environment {
        DOCKER_IMAGE = 'ecomapp:latest'
    }
    stages {
        stage('Deploy MySQL') {
            steps {
                script {
                    bat 'docker-compose -f docker-compose.yml down || echo "No existing containers to stop"'
                    bat 'docker-compose -f docker-compose.yml up -d mysql8'
                    bat '''
:loop
docker exec mysql8 mysqladmin -uroot -p1212 ping | findstr "mysqld is alive" && goto done
timeout /t 5 >nul
goto loop
:done
'''

                    bat 'docker exec mysql8 mysql -uroot -p1212 ecomjava -e "SHOW TABLES"'
                }
            }
        }
        stage('Build Docker Image') {
            steps {
                bat 'docker build -t ecomapp:latest .'
            }
        }
        stage('Deploy ecomapp') {
            steps {
                bat 'docker-compose -f docker-compose.yml up -d ecomapp'
            }
        }
        stage('Health Check') {
            steps {
                bat 'curl -f http://localhost:8083 || exit 1'
            }
        }
    }
    post {
        success {
            echo "Application successfully deployed."
        }
        failure {
            echo "Deployment failed. Logs:"
            bat 'docker logs mysql8'
            bat 'docker logs ecomapp'
        }
    }
}
